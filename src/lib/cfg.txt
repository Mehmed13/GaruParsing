START -> ALGO
ALGO -> ALGO ALGO | ASSIGN | INT_ASSIGN | OBJECT_ASSIGN | METHOD_ALGO_ASSIGN | IF_STATE ELSE_STATE | IF_STATE ELSE_IF_STATE | WHILE_CONDITION | FOR_CONDITION | SWITCH_CONDITION | FUNCTION_STATE | WORD DOT WORD PARENTHESES_OPEN WORD PARENTHESES_CLOSE | OPERATOR | STRING_OPERATOR | METHOD_ALGO | TRY_STATE | PARAM_STATE | DELETE_OP
METHOD_ALGO -> PARAM | WORD DOT WORD PARENTHESES_OPEN METHOD_ALGO PARENTHESES_CLOSE | WORD DOT WORD PARENTHESES_OPEN  PARENTHESES_CLOSE
PARAM -> WORD | WORD DOT WORD | WORD COMMA PARAM | WORD EQUAL STRING | WORD EQUAL STRING COMMA PARAM | WORD EQUAL STRING | WORD EQUAL WORD  
PARAM_STATE -> PARENTHESES_OPEN PARAM PARENTHESES_CLOSE | PARENTHESES_OPEN PARENTHESES_CLOSE | PARENTHESES_OPEN PARAM PARENTHESES_CLOSE
IF_STATE -> IF_ALGO | IF_ALGO ELSE_STATE | IF_ALGO ELSE_STATE 
IF_ALGO -> IF PARENTHESES_OPEN CONDITION PARENTHESES_CLOSE CURLY_BRACKET_OPEN ALGO CURLY_BRACKET_CLOSE | ALGO IF PARENTHESES_OPEN CONDITION PARENTHESES_CLOSE ALGO
ELSE_IF_STATE -> ELSE_IF_ALGO | ELSE_IF_ALGO ELSE_STATE | ELSE_IF_ALGO ELSE_IF_STATE
ELSE_IF_ALGO -> ELIF PARENTHESES_OPEN CONDITION PARENTHESES_CLOSE CURLY_BRACKET_OPEN ALGO CURLY_BRACKET_CLOSE | ELIF PARENTHESES_OPEN CONDITION PARENTHESES_CLOSE ALGO
ELSE_STATE -> ELSE CURLY_BRACKET_OPEN ALGO CURLY_BRACKET_CLOSE | ELSE ALGO 
CONDITION -> PARENTHESES_OPEN CONDITION PARENTHESES_CLOSE | CONDITION LOGIC_OP CONDITION | EXPRES RELAT_OP EXPRES | NOT CONDITION | WORD | BOOLEAN 
WHILE_CONDITION -> WHILE PARENTHESES_OPEN CONDITION PARENTHESES_CLOSE CURLY_BRACKET_OPEN ALGO_LOOP CURLY_BRACKET_CLOSE  
FOR_CONDITION -> FOR PARENTHESES_OPEN FOR_TYPE_CONDITION PARENTHESES_CLOSE CURLY_BRACKET_OPEN ALGO_LOOP CURLY_BRACKET_CLOSE
FOR_TYPE_CONDITION -> FOR_A | FOR_B
FOR_A -> WORD IN WORD
FOR_B -> COND_1 SEMI_COLON COND_2 SEMI_COLON COND_3 | SEMI_COLON COND_2 SEMI_COLON COND_3
COND_1 -> LET WORD EQUAL INT | LET WORD EQUAL INT COMMA ADDITION_EXPRES 
COND_2 -> WORD RELAT_OP WORD
COND_3 -> WORD INCREMENT | WORD DECREMENT | INT_ASSIGN
ADDITION_EXPRES -> ASSIGN | ADDITION_EXPRES COMMA ADDITION_EXPRES
ALGO_LOOP -> ALGO_LOOP ALGO_LOOP | CONTINUE | CONTINUE_STATE | BREAK_STATE | BREAK | IF_LOOP_STATE | IF_LOOP_STATE ELSE_IF_LOOP_STATE | IF_LOOP_STATE ELSE_LOOP_STATE | ALGO
IF_LOOP_STATE -> IF_LOOP_ALGO | IF_LOOP_ALGO ELSE_LOOP_STATE | IF_LOOP_ALGO ELSE_IF_LOOP_STATE
IF_LOOP_ALGO -> IF PARENTHESES_OPEN CONDITION PARENTHESES_CLOSE CURLY_BRACKET_OPEN ALGO_LOOP CURLY_BRACKET_CLOSE | IF PARENTHESES_OPEN CONDITION PARENTHESES_CLOSE ALGO_LOOP
ELSE_IF_LOOP_STATE -> ELSE_IF_ALGO | ELSE_IF_ALGO ELSE_LOOP_STATE | ELSE_IF_LOOP_ALGO ELSE_IF_LOOP_STATE 
ELSE_IF_LOOP_ALGO -> ELIF PARENTHESES_OPEN CONDITION PARENTHESES_CLOSE CURLY_BRACKET_OPEN ALGO_LOOP CURLY_BRACKET_CLOSE | ELIF PARENTHESES_OPEN CONDITION PARENTHESES_CLOSE ALGO_LOOP
ELSE_LOOP_STATE -> ELSE CURLY_BRACKET_OPEN ALGO_LOOP CURLY_BRACKET_CLOSE | ELSE CURLY_BRACKET_OPEN IF_LOOP_STATE CURLY_BRACKET_CLOSE | ELSE ALGO_LOOP | ELSE IF_LOOP_STATE
LIST -> SQUARE_BRACKET_OPEN ELMT_LIST SQUARE_BRACKET_CLOSE | SQUARE_BRACKET_OPEN SQUARE_BRACKET_CLOSE | PARENTHESES_OPEN
ELMT_LIST -> LIST | LIST COMMA ELMT_LIST | EXPRES | EXPRES COMMA ELMT_LIST | STRING | STRING COMMA ELMT_LIST
EXPRES -> WORD | INT | FLOAT | NEG_FL | NEG_INT |  PARENTHESES_OPEN EXPRES PARENTHESES_CLOSE | EXPRES ARITH_OP EXPRES | WORD DOT WORD | NULL
DELETE_OP -> DELETE METHOD_ALGO
TRY_STATE -> TRY CURLY_BRACKET_OPEN ALGO CURLY_BRACKET_CLOSE CATCH_STATE | TRY CURLY_BRACKET_OPEN ALGO CURLY_BRACKET_CLOSE FINAL_STATE | TRY CURLY_BRACKET_OPEN ALGO CURLY_BRACKET_CLOSE CATCH_STATE FINAL_STATE
CATCH_STATE -> CATCH PARENTHESES_OPEN WORD PARENTHESES_CLOSE CURLY_BRACKET_OPEN ALGO CURLY_BRACKET_CLOSE | CATCH CURLY_BRACKET_OPEN ALGO CURLY_BRACKET_CLOSE 
FINAL_STATE -> FINALLY CURLY_BRACKET_OPEN ALGO CURLY_BRACKET_CLOSE
BREAK_STATE -> BREAK WORD
CONTINUE_STATE -> CONTINUE WORD
FUNCTION_STATE -> FUNCTION VAR_FUNCTION | FUNCTION VAR_FUNCTION CURLY_BRACKET_OPEN ALGO_IN_FUNCTION CURLY_BRACKET_CLOSE |  FUNCTION VAR_FUNCTION CURLY_BRACKET_OPEN FUNCTION_STATE CURLY_BRACKET_CLOSE 
VAR_FUNCTION -> WORD PARENTHESES_OPEN PARENTHESES_CLOSE | WORD PARENTHESES_OPEN PARAM_FUNCTION PARENTHESES_CLOSE
PARAM_FUNCTION -> WORD
ALGO_IN_FUNCTION -> RETURN_STATE | ALGO | ALGO ALGO_IN_FUNCTION | ALGO_IN_FUNCTION ALGO
RETURN_STATE -> RETURN RETURN_PARAM
RETURN_PARAM -> RETURN_OBJ | RETURN_OBJ COMMA RETURN_PARAM
RETURN_OBJ -> STRING | WORD | LIST | INT | FLOAT | NEG_FL | NEG_INT | PARENTHESES_OPEN EXPRES PARENTHESES_CLOSE | WORD DOT WORD | NULL
OBJECT_ASSIGN -> LVC WORD EQUAL OBJECT_LIST | WORD EQUAL OBJECT_LIST  
OBJECT_LIST -> CURLY_BRACKET_OPEN CURLY_BRACKET_CLOSE | CURLY_BRACKET_OPEN OBJECT_ELMT CURLY_BRACKET_CLOSE 
OBJECT_ELMT -> WORD COLON OBJECT_VALUE | WORD COLON OBJECT_VALUE COMMA OBJECT_ELMT 
OBJECT_VALUE -> EXPRES | STRING | WORD 
OPERATOR -> WORD EQUAL EXPRES | PARENTHESES_OPEN WORD PARENTHESES_CLOSE
ASSIGN -> LVC WORD EQUAL EXPRES | LVC WORD EQUAL STRING | LVC WORD EQUAL LIST | WORD EQUAL EXPRES | WORD EQUAL STRING | WORD EQUAL LIST  
INT_ASSIGN -> LVC WORD OP_ASSIGN EXPRES | WORD OP_ASSIGN EXPRES 
METHOD_ALGO_ASSIGN -> METHOD_ALGO EQUAL EXPRES | METHOD_ALGO EQUAL STRING | METHOD_ALGO EQUAL LIST | METHOD_ALGO EQUAL EXPRES | METHOD_ALGO EQUAL STRING | METHOD_ALGO EQUAL LIST
LVC -> LET | VAR | CONST
OP_ASSIGN -> EQUAL | PLUS EQUAL | MINUS EQUAL | TIMES EQUAL | DIVISION EQUAL  
COMMENT_OP -> COMMENT_ALONE SENTENCE | COMMENT_OPEN COMMENT_LONG COMMENT_CLOSE
COMMENT_LONG -> SENTENCE | SENTENCE COMMENT_LONG
SENTENCE -> WORD | WORD SENTENCE
RELAT_OP -> GREATER | LESS | GREATER_AND_EQUAL | LESS_AND_EQUAL | EQUAL_TO | NOT_EQUAL_TO | EQUAL_VALUE_AND_EQUAL_TYPE | NOT_EQUAL_VALUE_OR_TYPE
ARITH_OP -> MINUS | PLUS | TIMES | DIVISION | MODULO | EXPONENT
LOGIC_OP -> AND | OR
STRING -> QUOTE W_STRING QUOTE | DOUBLE_QUOTE W_STRING DOUBLE_QUOTE
W_STRING -> WORD | WORD W_STRING
PARENTHESES_WORD -> QUOTE WORD QUOTE | DOUBLE_QUOTE WORD DOUBLE_QUOTE
FLOAT -> INT DOT INT
NEG_INT -> MINUS INT 
NEG_FLOAT -> MINUS FLOAT
NOT -> EXCLAMATION
LET -> let
VAR -> var
CONST -> const
BOOLEAN -> false | true
BREAK -> break
DEFAULT -> default
FOR -> for
DELETE -> delete
FUNCTION -> function
SWITCH -> switch
WHILE -> while
CASE -> case
IF -> if
ELSE -> else
ELIF -> ELSE IF 
THROW -> throw
TRY -> try     
CATCH -> catch
RETURN -> return
CONTINUE -> continue
FINALLY -> finally
NULL -> null
AND -> &&
OR -> || 
MINUS -> -
PLUS -> +
TIMES -> *
EXPONENT -> **
DIVISION -> /
COMMENT_ALONE -> //
COMMENT_OPEN -> /*
COMMENT_CLOSE -> */
INCREMENT -> ++
DECREMENT -> --
MODULO -> %
EQUAL -> =
NOT_EQUAL_TO -> != 
EQUAL_TO -> ==
EQUAL_VALUE_AND_EQUAL_TYPE -> ===
NOT_EQUAL_VALUE_OR_TYPE -> !==
TERNARY_OPERATOR -> ?
DOT -> .
SQUARE_BRACKET_OPEN -> [
SQUARE_BRACKET_CLOSE -> ]
CURLY_BRACKET_OPEN -> {   
CURLY_BRACKET_CLOSE -> }
PARENTHESES_OPEN -> (
PARENTHESES_CLOSE -> )
QUOTE -> '
COMMA -> ,
COLON -> :
SEMI_COLON -> ;
PIPELINE -> |
GREATER -> > 
GREATER -> >
LESS -> <
EXCLAMATION -> !
GREATER_AND_EQUAL -> >=
LESS_AND_EQUAL -> <=
DOUBLE_QUOTE -> "
IN -> in