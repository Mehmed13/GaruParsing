START -> ALGO | ELSE_STATE
ALGO -> ALGO ALGO | ALGOSC | ALGOSC SEMI_COLON_S | SEMI_COLON_S ALGOSC | SEMI_COLON_S ALGOSC SEMI_COLON_S | IF_STATE | IF_STATE ELSE_STATE | IF_STATE ELSE_IF_STATE | WHILE_CONDITION | FOR_CONDITION | SWITCH_CONDITION | FUNCTION_STATE | TRY_STATE | THROW_STATE | RETURN_STATE
ALGOSC -> ASSIGN | INT_ASSIGN | OBJECT_ASSIGN | METHOD_ALGO_ASSIGN | WORD DOT WORD PARENTHESES_OPEN WORD PARENTHESES_CLOSE | OPERATOR | STRING_OPERATOR | METHOD_ALGO | DELETE_OP | PARAM_STATE 
SEMI_COLON_S -> SEMI_COLON | SEMI_COLON SEMI_COLON_S
THROW_STATE -> THROW PARAM_THROW | THROW PARAM_THROW SEMI_COLON_S 
PARAM_THROW -> STRING | EXPRES 
METHOD_ALGO -> PARAM | WORD DOT WORD PARENTHESES_OPEN METHOD_ALGO PARENTHESES_CLOSE | WORD DOT WORD PARENTHESES_OPEN  PARENTHESES_CLOSE | ELMT_LIST
PARAM -> WORD | WORD DOT WORD | WORD DOT METHOD_ALGO | WORD COMMA PARAM | WORD EQUAL STRING | WORD EQUAL STRING COMMA PARAM | WORD EQUAL STRING | WORD EQUAL WORD | STRING | EXPRES | ELMT_LIST | WORD DOT PARAM 
PARAM_STATE -> PARENTHESES_OPEN PARAM PARENTHESES_CLOSE | PARENTHESES_OPEN PARENTHESES_CLOSE | PARENTHESES_OPEN PARAM PARENTHESES_CLOSE
SWITCH_CONDITION -> SWITCH PARENTHESES_OPEN PARAM_SWITCH PARENTHESES_CLOSE CURLY_BRACKET_OPEN CURLY_BRACKET_CLOSE | SWITCH PARENTHESES_OPEN PARAM_SWITCH PARENTHESES_CLOSE CURLY_BRACKET_OPEN CASE_CONDITION CURLY_BRACKET_CLOSE 
PARAM_SWITCH -> PARAM_SWITCH COMMA PARAM_SWITCH | EXPRES | STRING | ELMT_LIST
CASE_CONDITION -> CASE_CONDITION CASE_CONDITION | CASE_ALGO DEFAULT_CONDITION | DEFAULT_CONDITION CASE_ALGO | CASE_ALGO | DEFAULT_CONDITION
CASE_ALGO -> CASE_ALGO CASE_ALGO | CASE PARENTHESES_OPEN PARAM_SWITCH PARENTHESES_CLOSE COLON SWITCH_CASE_ALGO | CASE PARENTHESES_OPEN PARAM_SWITCH PARENTHESES_CLOSE COLON  
SWITCH_CASE_ALGO -> SWITCH_CASE_ALGO SWITCH_CASE_ALGO | ALGO | SWITCH_CONDITION
DEFAULT_CONDITION -> DEFAULT COLON SWITCH_CASE_ALGO | DEFAULT COLON 
IF_STATE -> IF_ALGO | IF_ALGO ELSE_STATE | IF_ALGO ELSE_IF_STATE 
IF_ALGO -> IF PARENTHESES_OPEN CONDITION PARENTHESES_CLOSE CURLY_BRACKET_OPEN ALGO CURLY_BRACKET_CLOSE | IF PARENTHESES_OPEN CONDITION PARENTHESES_CLOSE ALGO |  IF PARENTHESES_OPEN CONDITION PARENTHESES_CLOSE CURLY_BRACKET_OPEN CURLY_BRACKET_CLOSE
ELSE_IF_STATE -> ELSE_IF_ALGO | ELSE_IF_ALGO ELSE_STATE | ELSE_IF_ALGO ELSE_IF_STATE
ELSE_IF_ALGO -> ELIF PARENTHESES_OPEN CONDITION PARENTHESES_CLOSE CURLY_BRACKET_OPEN ALGO CURLY_BRACKET_CLOSE | ELIF PARENTHESES_OPEN CONDITION PARENTHESES_CLOSE ALGO | ELIF PARENTHESES_OPEN CONDITION PARENTHESES_CLOSE CURLY_BRACKET_OPEN CURLY_BRACKET_CLOSE
ELSE_STATE -> ELSE CURLY_BRACKET_OPEN ALGO CURLY_BRACKET_CLOSE | ELSE ALGO | ELSE CURLY_BRACKET_OPEN CURLY_BRACKET_CLOSE
CONDITION -> PARENTHESES_OPEN CONDITION PARENTHESES_CLOSE | CONDITION LOGIC_OP CONDITION | EXPRES RELAT_OP EXPRES | NOT_BITWISE CONDITION | WORD | BOOLEAN 
WHILE_CONDITION -> WHILE PARENTHESES_OPEN CONDITION PARENTHESES_CLOSE CURLY_BRACKET_OPEN ALGO_LOOP CURLY_BRACKET_CLOSE | WHILE PARENTHESES_OPEN CONDITION PARENTHESES_CLOSE CURLY_BRACKET_OPEN CURLY_BRACKET_CLOSE  
FOR_CONDITION -> FOR PARENTHESES_OPEN FOR_TYPE_CONDITION PARENTHESES_CLOSE CURLY_BRACKET_OPEN ALGO_LOOP CURLY_BRACKET_CLOSE | FOR PARENTHESES_OPEN FOR_TYPE_CONDITION PARENTHESES_CLOSE CURLY_BRACKET_OPEN CURLY_BRACKET_CLOSE
FOR_TYPE_CONDITION -> FOR_A | FOR_B
FOR_A -> WORD IN WORD | LVC WORD IN WORD
FOR_B -> COND_1 SEMI_COLON COND_2 SEMI_COLON COND_3 | SEMI_COLON COND_2 SEMI_COLON COND_3
COND_1 -> LET WORD EQUAL INT | LET WORD EQUAL INT COMMA ADDITION_EXPRES | WORD EQUAL INT | WORD EQUAL INT COMMA ADDITION_EXPRES 
COND_2 -> WORD RELAT_OP METHOD_ALGO
COND_3 -> WORD INCREMENT | WORD DECREMENT | INT_ASSIGN
ADDITION_EXPRES -> ASSIGN | ADDITION_EXPRES COMMA ADDITION_EXPRES
ALGO_LOOP -> CONTINUE_STATE | BREAK_STATE | BREAK | ALGO_LOOP ALGO_LOOP | ALGO_LOOPSC | ALGO_LOOPSC SEMI_COLON_S | SEMI_COLON_S ALGO_LOOPSC | SEMI_COLON_S ALGO_LOOPSC SEMI_COLON_S | IF_LOOP_STATE | IF_LOOP_STATE ELSE_IF_LOOP_STATE | IF_LOOP_STATE ELSE_LOOP_STATE | ALGO
ALGO_LOOPSC -> CONTINUE_STATE | BREAK_STATE | BREAK 
IF_LOOP_STATE -> IF_LOOP_ALGO | IF_LOOP_ALGO ELSE_LOOP_STATE | IF_LOOP_ALGO ELSE_IF_LOOP_STATE
IF_LOOP_ALGO -> IF PARENTHESES_OPEN CONDITION PARENTHESES_CLOSE CURLY_BRACKET_OPEN ALGO_LOOP CURLY_BRACKET_CLOSE | IF PARENTHESES_OPEN CONDITION PARENTHESES_CLOSE ALGO_LOOP
ELSE_IF_LOOP_STATE -> ELSE_IF_ALGO | ELSE_IF_ALGO ELSE_LOOP_STATE | ELSE_IF_LOOP_ALGO ELSE_IF_LOOP_STATE 
ELSE_IF_LOOP_ALGO -> ELIF PARENTHESES_OPEN CONDITION PARENTHESES_CLOSE CURLY_BRACKET_OPEN ALGO_LOOP CURLY_BRACKET_CLOSE | ELIF PARENTHESES_OPEN CONDITION PARENTHESES_CLOSE ALGO_LOOP
ELSE_LOOP_STATE -> ELSE CURLY_BRACKET_OPEN ALGO_LOOP CURLY_BRACKET_CLOSE | ELSE CURLY_BRACKET_OPEN IF_LOOP_STATE CURLY_BRACKET_CLOSE | ELSE ALGO_LOOP | ELSE IF_LOOP_STATE
LIST -> SQUARE_BRACKET_OPEN ELMT_LIST SQUARE_BRACKET_CLOSE | SQUARE_BRACKET_OPEN SQUARE_BRACKET_CLOSE | PARENTHESES_OPEN PARENTHESES_CLOSE | PARENTHESES_OPEN ELMT_LIST PARENTHESES_CLOSE
ELMT_LIST -> LIST | LIST COMMA ELMT_LIST | EXPRES | EXPRES COMMA ELMT_LIST | STRING | STRING COMMA ELMT_LIST
EXPRES ->  METHOD_ALGO PARENTHESES_OPEN EXPRES PARENTHESES_CLOSE | PARENTHESES_OPEN EXPRES PARENTHESES_CLOSE | NOT_BITWISE EXPRES | STRING | WORD | INT | FLOAT | NEG_FL | NEG_INT |  PARENTHESES_OPEN EXPRES PARENTHESES_CLOSE | EXPRES ARITH_OP EXPRES | WORD DOT WORD | NULL 
DELETE_OP -> DELETE METHOD_ALGO
TRY_STATE -> TRY CURLY_BRACKET_OPEN ALGO CURLY_BRACKET_CLOSE CATCH_STATE | TRY CURLY_BRACKET_OPEN CURLY_BRACKET_CLOSE CATCH_STATE | TRY CURLY_BRACKET_OPEN ALGO CURLY_BRACKET_CLOSE FINAL_STATE | TRY CURLY_BRACKET_OPEN CURLY_BRACKET_CLOSE FINAL_STATE | TRY CURLY_BRACKET_OPEN ALGO CURLY_BRACKET_CLOSE CATCH_STATE FINAL_STATE | TRY CURLY_BRACKET_OPEN CURLY_BRACKET_CLOSE CATCH_STATE FINAL_STATE
CATCH_STATE -> CATCH PARENTHESES_OPEN WORD PARENTHESES_CLOSE CURLY_BRACKET_OPEN ALGO CURLY_BRACKET_CLOSE | CATCH PARENTHESES_OPEN WORD PARENTHESES_CLOSE CURLY_BRACKET_OPEN CURLY_BRACKET_CLOSE | CATCH CURLY_BRACKET_OPEN ALGO CURLY_BRACKET_CLOSE | CATCH CURLY_BRACKET_OPEN CURLY_BRACKET_CLOSE 
FINAL_STATE -> FINALLY CURLY_BRACKET_OPEN ALGO CURLY_BRACKET_CLOSE | FINALLY CURLY_BRACKET_OPEN CURLY_BRACKET_CLOSE 
BREAK_STATE -> BREAK WORD
CONTINUE_STATE -> CONTINUE WORD | CONTINUE
FUNCTION_STATE -> FUNCTION VAR_FUNCTION | FUNCTION VAR_FUNCTION CURLY_BRACKET_OPEN ALGO_IN_FUNCTION CURLY_BRACKET_CLOSE | FUNCTION VAR_FUNCTION CURLY_BRACKET_OPEN FUNCTION_STATE CURLY_BRACKET_CLOSE | FUNCTION VAR_FUNCTION CURLY_BRACKET_OPEN CURLY_BRACKET_CLOSE 
VAR_FUNCTION -> WORD PARENTHESES_OPEN PARENTHESES_CLOSE | WORD PARENTHESES_OPEN PARAM_FUNCTION PARENTHESES_CLOSE
PARAM_FUNCTION -> WORD | WORD COMMA PARAM_FUNCTION
ALGO_IN_FUNCTION -> RETURN_STATE ALGO_IN_FUNCTION | RETURN_STATE SEMI_COLON_S ALGO_IN_FUNCTION | RETURN_STATE SEMI_COLON_S | RETURN_STATE | ALGO | ALGO ALGO_IN_FUNCTION | ALGO_IN_FUNCTION ALGO
RETURN_STATE -> RETURN | RETURN RETURN_PARAM | RETURN SEMI_COLON_S | RETURN RETURN_PARAM SEMI_COLON_S 
RETURN_PARAM -> RETURN_OBJ | RETURN_OBJ COMMA RETURN_PARAM
RETURN_OBJ -> BOOLEAN | STRING | WORD | LIST | INT | FLOAT | NEG_FL | NEG_INT | PARENTHESES_OPEN EXPRES PARENTHESES_CLOSE | WORD DOT WORD | NULL | METHOD_ALGO
OBJECT_ASSIGN -> LVC WORD EQUAL OBJECT_LIST | WORD EQUAL OBJECT_LIST  
OBJECT_LIST -> CURLY_BRACKET_OPEN CURLY_BRACKET_CLOSE | CURLY_BRACKET_OPEN OBJECT_ELMT CURLY_BRACKET_CLOSE 
OBJECT_ELMT -> WORD COLON OBJECT_VALUE | WORD COLON OBJECT_VALUE COMMA OBJECT_ELMT 
OBJECT_VALUE -> EXPRES | STRING | WORD 
OPERATOR -> WORD EQUAL EXPRES | PARENTHESES_OPEN WORD PARENTHESES_CLOSE
ASSIGN -> ASSIGN_LVC | LVC ASSIGN_LVC 
ASSIGN_LVC -> WORD EQUAL ASSIGN_LVC | WORD EQUAL EXPRES | WORD EQUAL STRING | WORD EQUAL LIST 
INT_ASSIGN -> LVC WORD OP_ASSIGN EXPRES | WORD OP_ASSIGN EXPRES 
METHOD_ALGO_ASSIGN -> METHOD_ALGO EQUAL EXPRES | METHOD_ALGO EQUAL STRING | METHOD_ALGO EQUAL LIST | METHOD_ALGO EQUAL EXPRES | METHOD_ALGO EQUAL STRING | METHOD_ALGO EQUAL LIST
LVC -> LET | VAR_EXPRES | CONST
OP_ASSIGN -> EQUAL | PLUS EQUAL | MINUS EQUAL | TIMES EQUAL | DIVISION EQUAL | BITWISE_OPERATOR EQUAL  
COMMENT_OP -> COMMENT_ALONE SENTENCE | COMMENT_OPEN COMMENT_LONG COMMENT_CLOSE
COMMENT_LONG -> SENTENCE | SENTENCE COMMENT_LONG
SENTENCE -> WORD | WORD SENTENCE
RELAT_OP -> GREATER | LESS | GREATER_AND_EQUAL | LESS_AND_EQUAL | EQUAL_TO | NOT_EQUAL_TO | EQUAL_VALUE_AND_EQUAL_TYPE | NOT_EQUAL_VALUE_OR_TYPE
ARITH_OP -> MINUS | PLUS | TIMES | DIVISION | MODULO | EXPONENT | BITWISE_OPERATOR
LOGIC_OP -> AND | OR
BITWISE_OPERATOR -> F_RIGHT_SHIFT | RIGHT_SHIFT | LEFT_SHIFT | AND_BITWISE | XOR_BITWISE | OR_BITWISE 
STRING -> QUOTE W_STRING QUOTE | DOUBLE_QUOTE W_STRING DOUBLE_QUOTE
W_STRING -> WORD | WORD W_STRING
PARENTHESES_WORD -> QUOTE WORD QUOTE | DOUBLE_QUOTE WORD DOUBLE_QUOTE
FLOAT -> INT DOT INT
NEG_INT -> MINUS INT 
NEG_FL_BITWISEOAT -> MINUS FLOAT
NOT_BITWISE -> EXCLAMATION
LET -> let
VAR_EXPRES -> var
CONST -> const
BOOLEAN -> false | true
BREAK -> break
DEFAULT -> default
FOR -> for
DELETE -> delete
FUNCTION -> function
SWITCH -> switch
WHILE -> while
CASE -> case
IF -> if
ELSE -> else
ELIF -> ELSE IF 
THROW -> throw
TRY -> try     
CATCH -> catch
RETURN -> return
CONTINUE -> continue
FINALLY -> finally
NULL -> null
MINUS -> -
PLUS -> +
TIMES -> *
DIVISION -> /
MODULO -> %
EQUAL -> =
AND -> ~LO_AN~
OR -> ~LO_OR~
EXPONENT -> ~EX~
NOT_EQUAL_TO -> ~NO_EQ~
INCREMENT -> ~P_P~
DECREMENT -> ~M_M~
COMMENT_ALONE -> ~C_A~
COMMENT_OPEN -> ~C_O~
COMMENT_CLOSE -> ~C_C~
EQUAL_TO -> ~EQ_TO~
EQUAL_VALUE_AND_EQUAL_TYPE -> ~E_E_E~
NOT_EQUAL_VALUE_OR_TYPE -> ~N_E_E~
GREATER_AND_EQUAL -> ~GR_EQ~
LESS_AND_EQUAL -> ~LE_EQ~
TERNARY_OPERATOR -> ?
DOT -> .
SQUARE_BRACKET_OPEN -> [
SQUARE_BRACKET_CLOSE -> ]
CURLY_BRACKET_OPEN -> { 
CURLY_BRACKET_CLOSE -> }
PARENTHESES_OPEN -> (
PARENTHESES_CLOSE -> )
QUOTE -> '
COMMA -> ,
COLON -> :
SEMI_COLON -> ;
GREATER -> >
LESS -> <
EXCLAMATION -> !
WORD -> word
INT -> num
DOUBLE_QUOTE -> "
IN -> in
F_RIGHT_SHIFT -> ~F_R_S~
RIGHT_SHIFT -> ~R_S~
LEFT_SHIFT -> ~L_S~
AND_BITWISE -> &
OR_BITWISE -> ~OR~
XOR_BITWISE -> ^
NOT_BITWISE -> ~